// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/parzello.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	v1/parzello.proto

It has these top-level messages:
	DeliverRequest
	DeliverResponse
	Envelope
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeliverRequest struct {
	Envelope *Envelope `protobuf:"bytes,1,opt,name=envelope" json:"envelope,omitempty"`
}

func (m *DeliverRequest) Reset()                    { *m = DeliverRequest{} }
func (m *DeliverRequest) String() string            { return proto.CompactTextString(m) }
func (*DeliverRequest) ProtoMessage()               {}
func (*DeliverRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeliverRequest) GetEnvelope() *Envelope {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type DeliverResponse struct {
	ErrorMessage string `protobuf:"bytes,1,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (m *DeliverResponse) Reset()                    { *m = DeliverResponse{} }
func (m *DeliverResponse) String() string            { return proto.CompactTextString(m) }
func (*DeliverResponse) ProtoMessage()               {}
func (*DeliverResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeliverResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type Envelope struct {
	// ID -> pubsub.Message.Attributes["parzello.ID"]
	// set by the server
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	// payload -> pubsub.Message.Data
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// attributes -> pubsub.Message.Attributes
	Attributes map[string]string `protobuf:"bytes,3,rep,name=attributes" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// destinationTopic -> pubsub.Message.Attributes["parzello.destinationTopic"]
	// required for the DeliverRequest
	DestinationTopic string `protobuf:"bytes,4,opt,name=destinationTopic" json:"destinationTopic,omitempty"`
	// publishAfter -> pubsub.Message.Attributes["parzello.publishAfter"]
	// required for the DeliverRequest
	PublishAfter uint64 `protobuf:"varint,5,opt,name=publishAfter" json:"publishAfter,omitempty"`
	// deliveredAt -> pubsub.Message.Attributes["parzello.deliveredAt"]
	// set by the server to the time the DeliverRequest was sent
	DeliveredAt uint64 `protobuf:"varint,6,opt,name=deliveredAt" json:"deliveredAt,omitempty"`
	// publishCount -> pubsub.Message.Attributes["parzello.publishCount"]
	// set by the server to 1 on first publish to destination
	PublishCount uint64 `protobuf:"varint,7,opt,name=publishCount" json:"publishCount,omitempty"`
}

func (m *Envelope) Reset()                    { *m = Envelope{} }
func (m *Envelope) String() string            { return proto.CompactTextString(m) }
func (*Envelope) ProtoMessage()               {}
func (*Envelope) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Envelope) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Envelope) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Envelope) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Envelope) GetDestinationTopic() string {
	if m != nil {
		return m.DestinationTopic
	}
	return ""
}

func (m *Envelope) GetPublishAfter() uint64 {
	if m != nil {
		return m.PublishAfter
	}
	return 0
}

func (m *Envelope) GetDeliveredAt() uint64 {
	if m != nil {
		return m.DeliveredAt
	}
	return 0
}

func (m *Envelope) GetPublishCount() uint64 {
	if m != nil {
		return m.PublishCount
	}
	return 0
}

func init() {
	proto.RegisterType((*DeliverRequest)(nil), "v1.DeliverRequest")
	proto.RegisterType((*DeliverResponse)(nil), "v1.DeliverResponse")
	proto.RegisterType((*Envelope)(nil), "v1.Envelope")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DeliveryService service

type DeliveryServiceClient interface {
	Deliver(ctx context.Context, in *DeliverRequest, opts ...grpc.CallOption) (*DeliverResponse, error)
}

type deliveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeliveryServiceClient(cc *grpc.ClientConn) DeliveryServiceClient {
	return &deliveryServiceClient{cc}
}

func (c *deliveryServiceClient) Deliver(ctx context.Context, in *DeliverRequest, opts ...grpc.CallOption) (*DeliverResponse, error) {
	out := new(DeliverResponse)
	err := grpc.Invoke(ctx, "/v1.DeliveryService/Deliver", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DeliveryService service

type DeliveryServiceServer interface {
	Deliver(context.Context, *DeliverRequest) (*DeliverResponse, error)
}

func RegisterDeliveryServiceServer(s *grpc.Server, srv DeliveryServiceServer) {
	s.RegisterService(&_DeliveryService_serviceDesc, srv)
}

func _DeliveryService_Deliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryServiceServer).Deliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DeliveryService/Deliver",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryServiceServer).Deliver(ctx, req.(*DeliverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeliveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.DeliveryService",
	HandlerType: (*DeliveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deliver",
			Handler:    _DeliveryService_Deliver_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/parzello.proto",
}

func init() { proto.RegisterFile("v1/parzello.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0xaf, 0xd2, 0x40,
	0x10, 0xc7, 0xd3, 0xf2, 0xde, 0x03, 0x06, 0x02, 0xb8, 0x7a, 0xd8, 0x10, 0x13, 0x6b, 0x4f, 0x8d,
	0x87, 0x92, 0xd6, 0x98, 0x18, 0xa2, 0x07, 0x14, 0x0e, 0x1c, 0xbc, 0x54, 0x4f, 0xde, 0xfa, 0x63,
	0x84, 0x0d, 0x4b, 0xb7, 0xee, 0x6e, 0x37, 0xa9, 0xff, 0xa0, 0xff, 0x96, 0xa1, 0x2d, 0x4d, 0xeb,
	0xbb, 0x75, 0x3e, 0x33, 0xfd, 0xee, 0xcc, 0x7c, 0x07, 0x5e, 0x98, 0x60, 0x53, 0xc4, 0xf2, 0x0f,
	0x72, 0x2e, 0xfc, 0x42, 0x0a, 0x2d, 0x88, 0x6d, 0x02, 0x77, 0x0b, 0x8b, 0x3d, 0x72, 0x66, 0x50,
	0x46, 0xf8, 0xbb, 0x44, 0xa5, 0x89, 0x07, 0x13, 0xcc, 0x0d, 0x72, 0x51, 0x20, 0xb5, 0x1c, 0xcb,
	0x9b, 0x85, 0x73, 0xdf, 0x04, 0xfe, 0xa1, 0x65, 0x51, 0x97, 0x75, 0x3f, 0xc0, 0xb2, 0xfb, 0x57,
	0x15, 0x22, 0x57, 0x48, 0x5c, 0x98, 0xa3, 0x94, 0x42, 0x7e, 0x43, 0xa5, 0xe2, 0x53, 0x23, 0x30,
	0x8d, 0x06, 0xcc, 0xfd, 0x6b, 0xc3, 0xe4, 0xae, 0x46, 0x16, 0x60, 0x1f, 0xf7, 0x6d, 0x99, 0x7d,
	0xdc, 0x13, 0x0a, 0xe3, 0x22, 0xae, 0xb8, 0x88, 0x33, 0x6a, 0x3b, 0x96, 0x37, 0x8f, 0xee, 0x21,
	0xf9, 0x04, 0x10, 0x6b, 0x2d, 0x59, 0x52, 0x6a, 0x54, 0x74, 0xe4, 0x8c, 0xbc, 0x59, 0xf8, 0xba,
	0xdf, 0x99, 0xbf, 0xeb, 0xd2, 0x87, 0x5c, 0xcb, 0x2a, 0xea, 0xd5, 0x93, 0x77, 0xb0, 0xca, 0x50,
	0x69, 0x96, 0xc7, 0x9a, 0x89, 0xfc, 0x87, 0x28, 0x58, 0x4a, 0x1f, 0xea, 0x57, 0x9f, 0xf1, 0xdb,
	0x10, 0x45, 0x99, 0x70, 0xa6, 0xce, 0xbb, 0x5f, 0x1a, 0x25, 0x7d, 0x74, 0x2c, 0xef, 0x21, 0x1a,
	0x30, 0xe2, 0xc0, 0x2c, 0x6b, 0x66, 0xc7, 0x6c, 0xa7, 0xe9, 0x53, 0x5d, 0xd2, 0x47, 0x3d, 0x95,
	0xaf, 0xa2, 0xcc, 0x35, 0x1d, 0x0f, 0x54, 0x6a, 0xb6, 0xfe, 0x0c, 0xcb, 0xff, 0x9a, 0x26, 0x2b,
	0x18, 0x5d, 0xb0, 0x6a, 0x37, 0x72, 0xfb, 0x24, 0xaf, 0xe0, 0xd1, 0xc4, 0xbc, 0xc4, 0x7a, 0x21,
	0xd3, 0xa8, 0x09, 0xb6, 0xf6, 0x47, 0x2b, 0x3c, 0x74, 0x06, 0x54, 0xdf, 0x51, 0x1a, 0x96, 0x22,
	0x09, 0x61, 0xdc, 0x22, 0x42, 0x6e, 0xcb, 0x19, 0x9a, 0xbb, 0x7e, 0x39, 0x60, 0x8d, 0x69, 0x5f,
	0xde, 0xfe, 0x7c, 0x73, 0x62, 0xfa, 0x5c, 0x26, 0x7e, 0x2a, 0xae, 0x1b, 0xbc, 0xb2, 0xf4, 0xc2,
	0x91, 0x75, 0xd7, 0xb2, 0x31, 0x41, 0xf2, 0x54, 0x5f, 0xcc, 0xfb, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x83, 0x96, 0xdc, 0xfb, 0x46, 0x02, 0x00, 0x00,
}
